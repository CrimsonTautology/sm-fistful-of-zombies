name: Create release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    name: Create release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up SourceMod compiler
        uses: rumblefrog/setup-sp@master
        with:
          version: '1.10'

      - name: Compile SourceMod plugins and archive
        run: make release.tar.gz release.zip SPCOMP=spcomp

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset as tar.gz
        id: upload-release-asset-tgz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./release.tar.gz
          asset_name: ${{ github.event.repository.name }}-${{ env.RELEASE_VERSION }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload release asset as zip
        id: upload-release-asset-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./release.zip
          asset_name: ${{ github.event.repository.name }}-${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
